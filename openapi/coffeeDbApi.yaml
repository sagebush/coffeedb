openapi: 3.0.0
info:
  title: Database Of Coffee
  version: 0.0.1

servers:
  - url: http://database.coffee/

paths:
  /:
    get:
      summary: home page without language specified, returns a redirect to english
      operationId: base
      x-openapi-router-controller: api.base
      responses:
        '308':
          description: redirect to home page
          headers:
            Location:
              description: location to redirect to
              schema:
                type: string
  /{language}:
    get:
      summary: home page
      operationId: home
      x-openapi-router-controller: api.base
      parameters:
        - $ref: "#/components/parameters/LanguageCodeParam"
      responses:
        '200':
          description: home page
          content:
            text/html:
              schema:
                type: string
  /{language}/origins:
    get:
      summary: List of origins
      parameters:
        - $ref: "#/components/parameters/LanguageCodeParam"
      responses:
        "200":
          $ref: "#/components/responses/CountryResp"
  /{language}/regions:
    get:
      summary: List of regions in the given origin
      parameters:
        - $ref: "#/components/parameters/LanguageCodeParam"
        - $ref: "#/components/parameters/CountryFilterParam"
      responses:
        "200":
          $ref: "#/components/responses/ItemNamesResp"
  /{language}/farms:
    get:
      summary: List of farms in a region
      parameters:
        - $ref: "#/components/parameters/LanguageCodeParam"
        - $ref: "#/components/parameters/CountryFilterParam"
        - $ref: "#/components/parameters/RegionFilterParam"
        - name: producer
          in: query
          schema:
            $ref: "#/components/schemas/RefName"
      responses:
        "200":
          $ref: "#/components/responses/ItemNamesResp"
  /{language}/stations:
    get:
      summary: List of washind stations in a region
      parameters:
        - $ref: "#/components/parameters/LanguageCodeParam"
        - $ref: "#/components/parameters/CountryFilterParam"
        - $ref: "#/components/parameters/RegionFilterParam"
      responses:
        "200":
          $ref: "#/components/responses/ItemNamesResp"
#  /{language}/producers:
#    get:
#      summary: List of producers from a region
#      parameters:
#        - $ref: "#/components/parameters/LanguageCodeParam"
#        - $ref: "#/components/parameters/CountryFilterParam"
#        - $ref: "#/components/parameters/RegionFilterParam"
#      responses:
#        "200":
#          $ref: "#/components/responses/ItemNamesResp"
  /{language}/varieties:
    get:
      summary: List of all varieties
      parameters:
        - $ref: "#/components/parameters/LanguageCodeParam"
      responses:
        "200":
          $ref: "#/components/responses/ItemNamesResp"
#  /{language}/processing:
#    get:
#      summary: List of all processes
#      parameters:
#        - $ref: "#/components/parameters/LanguageCodeParam"
#        - $ref: "#/components/parameters/CountryFilterParam"
#        - $ref: "#/components/parameters/RegionFilterParam"
#      responses:
#        "200":
#          $ref: "#/components/responses/ItemNamesResp"
  /{language}/roastercountries:
    get:
      summary: List of countries of roasters
      parameters:
        - $ref: "#/components/parameters/LanguageCodeParam"
      responses:
        "200":
          $ref: "#/components/responses/CountryResp"
  /{language}/roasters:
    get:
      summary: List of all roasters
      parameters:
        - $ref: "#/components/parameters/LanguageCodeParam"
        - $ref: "#/components/parameters/CountryFilterParam"
      responses:
        "200":
          $ref: "#/components/responses/RoasterResp"
#  /flavournotes:
#    get:
#      summary: List of all flavour notes
#      responses:
#        "200":
#          $ref: "#/components/responses/ItemsResp"
#  /coffees:
#    get:
#      summary: List of coffees
#      parameters:
#        - name: origin
#          in: query
#          schema:
#            $ref: "#/components/schemas/RefName"
#        - name: region
#          in: query
#          schema:
#            $ref: "#/components/schemas/RefName"
#        - name: producer
#          in: query
#          schema:
#            $ref: "#/components/schemas/RefName"
#        - name: variety
#          in: query
#          schema:
#            $ref: "#/components/schemas/RefName"
#        - name: processing
#          in: query
#          schema:
#            $ref: "#/components/schemas/RefName"
#        - name: roaster
#          in: query
#          schema:
#            $ref: "#/components/schemas/RefName"
#        - name: roast
#          in: query
#          schema:
#            $ref: "#/components/schemas/Roast"
#        - name: flavournote
#          in: query
#          explode: false
#          style: form
#          schema:
#            type: array
#            items:
#              $ref: "#/components/schemas/RefName"
#            minItems: 1
#            maxItems: 3
#        - name: flavourcategory
#          in: query
#          explode: false
#          style: form
#          schema:
#            type: array
#            items:
#              $ref: "#/components/schemas/RefName"
#            minItems: 1
#            maxItems: 3
#        - name: from
#          in: query
#          schema:
#            type: integer
#            minimum: 0
#            default: 0
#        - name: to
#          in: query
#          schema:
#            type: integer
#            minimum: 0
#            default: 100
#      responses:
#        "200":
#          description: Coffees matching the query
#          content:
#            text/html:
#              schema:
#                type: string
#            application/json:
#              schema:
#                type: array
#                items:
#                  type: object
#                  properties:
#                    coffees:
#                      type: array
#                      items:
#                        $ref: "#/components/schemas/Coffee"
#                    pagination:
#                      type: object
#                      properties:
#                        total:
#                          type: integer
#                          minimum: 0
#                        returned:
#                          type: integer
#                          minimum: 0
#                        from:
#                          type: integer
#                          minimum: 0
#                        to:
#                          type: integer
#                          minimum: 0
#                      required:
#                        - total
#                        - returned
#                        - from
#                        - to
#                  required:
#                    - coffees
#                    - pagination
#    post:
#      summary: Commit a (potentially) new coffee to the archive
#      requestBody:
#        required: true
#        content:
#          application/json:
#            schema:
#              $ref: "#/components/schemas/IncomingCoffee"
#      responses:
#        "200":
#          description: Incoming coffee accepted
#  /coffee/{id}:
#    get:
#      summary: provides infos for a single coffee. Json only
#      parameters:
#        - in: path
#          name: id
#          required: true
#          schema:
#            type: integer
#      responses:
#        "200":
#          description: Coffee for given id
#          content:
#            text/html:
#              schema:
#                type: string
#            application/json:
#              schema:
#                $ref: "#/components/schemas/Coffee"
                

components:
  schemas:
    RefName:
      type: string
      format: "^[a-z_]{2-64}$"
    DisplayName:
      type: string
      minLength: 2
      maxLength: 128
    CountryCode:
      description: Two letter country code following iso-3166 alpha-2
      type: string
      format: "^[A-Z]{2}$"
    LanguageCode:
      description: Two letter code following ISO-639-1 for each supported language
      type: string
      format: "^[a-z]{2}$"
    ItemName:
      type: object
      properties:
        refName:
          $ref: "#/components/schemas/RefName"
        displayName:
          $ref: "#/components/schemas/DisplayName"
      required:
        - refName
        - displayName
    CountryName:
      type: object
      properties:
        refName:
          $ref: "#/components/schemas/RefName"
        displayName:
          $ref: "#/components/schemas/DisplayName"
        countryCode:
          $ref: "#/components/schemas/CountryCode"
      required:
        - refName
        - displayName
        - countryCode
    ItemId:
      type: object
      properties:
        refId:
          type: integer
        displayName:
          $ref: "#/components/schemas/DisplayName"
      required:
        - refId
        - displayName
    Roaster:
      type: object
      properties:
        refName:
          $ref: "#/components/schemas/RefName"
        displayName:
          $ref: "#/components/schemas/DisplayName"
        url:
          type: string
        country:
          $ref: "#/components/schemas/CountryName"
      required:
        - refName
        - displayName
        - countryCode
#    Coffee:
#      type: object
#      properties:
#        id:
#          type: integer
#        displayName:
#          $ref: "#/components/schemas/DisplayName"
#        roaster:
#          $ref: "#/components/schemas/Roaster"
#        roast:
#          $ref: "#/components/schemas/NamedId"
#        flavourNotes:
#          type: array
#          items:
#            $ref: "#/components/schemas/NamedId"
#          minItems: 1
#          maxItems: 5
#        greens:
#          type: array
#          items:
#            type: object
#            properties:
#              origin:
#                $ref: "#/components/schemas/LocationId"
#              region:
#                $ref: "#/components/schemas/LocationId"
#              producer:
#                $ref: "#/components/schemas/LocationId"
#              variety:
#                $ref: "#/components/schemas/NamedId"
#              processing:
#                $ref: "#/components/schemas/NamedId"
#              decaffeinated:
#                $ref: "#/components/schemas/NamedId"
#              certification:
#                $ref: "#/components/schemas/NamedId"
#              blendPercentage:
#                type: integer
#                minimum: 0
#                maximum: 100
#            required:
#              - origin
#          minItems: 1
#          maxItems: 5
#      required:
#        - id
#        - displayName
#        - roaster

  parameters:
    LanguageCodeParam:
      name: language
      description: Language code
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/LanguageCode"
    CountryFilterParam:
      name: country
      description: Query parameter to filter for country
      in: query
      schema:
        $ref: "#/components/schemas/RefName"
    RegionFilterParam:
      name: region
      description: Query parameter to filter for region
      in: query
      schema:
        $ref: "#/components/schemas/RefName"
    FarmFilterParam:
      name: farm
      description: Query parameter to filter for farm
      in: query
      schema:
        $ref: "#/components/schemas/RefName"
    ProducerFilterParam:
      name: producer
      description: Query parameter to filter for farm
      in: query
      schema:
        type: integer
    VarietyFilterParam:
      name: farm
      description: Query parameter to filter for farm
      in: query
      schema:
        $ref: "#/components/schemas/RefName"
    ProcessingFilterParam:
      name: farm
      description: Query parameter to filter for farm
      in: query
      schema:
        $ref: "#/components/schemas/RefName"

  responses:
    ItemNamesResp:
      description: List of items, with ref name and display name
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ItemName"
    ItemIdsResp:
      description: List of items, with id and dispaly name
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/ItemId"
    RoasterResp:
      description: List of roasters
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/Roaster"
    CountryResp:
      description: List of countries
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: "#/components/schemas/CountryName"
